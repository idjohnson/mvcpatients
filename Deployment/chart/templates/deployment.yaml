apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-deployment
  labels:
    app: {{ .Chart.Name }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Chart.Name }}
  template:
    metadata:
      labels:
        app: {{ .Chart.Name }}
    spec:
      containers:
      - name: {{ .Chart.Name }}-container
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        ports:
        - containerPort: {{ .Values.image.port }}
        env:
        - name: DB_HOST
          value: "{{ .Values.env.dbHost }}"
        - name: DB_NAME
          value: "{{ .Values.env.dbName }}"
        - name: DB_USER
          value: "{{ .Values.env.dbUser }}"
        - name: DB_PORT
          value: "{{ .Values.env.dbPort }}"
        - name: OTEL_EXPORTER_OTLP_PROTOCOL
          value: "{{ .Values.otel.protocol }}"
        - name: OTEL_EXPORTER_OTLP_ENDPOINT
          value: "{{ .Values.otel.endpoint }}"
        - name: OTEL_SERVICE_NAME
          value: "{{ .Values.otel.servicename }}"
        - name: OTEL_EXPORTER_OTLP_HEADERS
          value: "{{ .Values.otel.headers }}"
        - name: OTEL_RESOURCE_ATTRIBUTES
          value: "{{ .Values.otel.attributes }}"
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-secret
              key: DB_PASSWORD
      imagePullSecrets:
      {{- if .Values.imagePullSecrets }}
      {{- range .Values.imagePullSecrets }}
      - name: {{ .name }}
      {{- end }}
      {{- end }} 